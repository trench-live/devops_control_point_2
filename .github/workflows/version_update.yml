name: Version files update
on:
  workflow_call:

env:
  NAME_VERSION_FILE: ${{ github.workspace }}/version/version
  RELEASE_BRANCH: release
  MINOR: minor
  PATCH: patch
  VERSION_UP: .github/workflows/scripts/version_update.py

jobs:
  validate_branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  #

      - name: Parse branch name
        id: parse-data
        uses: tj-actions/branch-names@v8

  update-version:
    runs-on: ubuntu-latest
    needs: validate_branch
    outputs:
      tag: ${{steps.output-tag.outputs.TAG_MSG}}
    steps:
      - name: Parse branch name
        id: parse-data
        uses: tj-actions/branch-names@v8

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ env.RELEASE_BRANCH }}
          fetch-depth: 0

      - name: Validate branch (feature/hotfix)
        id: validate-branch
        if: |
          contains(steps.parse-data.outputs.current_branch, 'feature') || 
          contains(steps.parse-data.outputs.current_branch, 'hotfix')
        run: echo "Valid branch"

      - name: Run minor version update script
        id: update-minor-version
        if: contains(steps.parse-data.outputs.current_branch, 'feature')
        run: |
          echo "Running: python ${{ env.VERSION_UP }} ${{ env.MINOR }} ${{ env.NAME_VERSION_FILE }}"
          python ${{ env.VERSION_UP }} ${{ env.MINOR }} ${{ env.NAME_VERSION_FILE }}

      - name: Run patch version update script
        id: update-patch-version
        if: contains(steps.parse-data.outputs.current_branch, 'hotfix')
        run: |
          echo "Running: python ${{ env.VERSION_UP }} ${{ env.PATCH }} ${{ env.NAME_VERSION_FILE }}"
          python ${{ env.VERSION_UP }} ${{ env.PATCH }} ${{ env.NAME_VERSION_FILE }}

      - name: Set output tag
        id: output-tag
        run: |
          TAG_MSG=$(python ${{ env.VERSION_UP }} ${{ env.NAME_VERSION_FILE }} version)
          echo "TAG_MSG=$TAG_MSG" >> $GITHUB_OUTPUT

      - name: Setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Commit and push changes
        run: |
          git add .
          git commit -m "Update version"
          git push origin ${{ env.RELEASE_BRANCH }}