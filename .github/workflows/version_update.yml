name: Version files update
on:
  workflow_call:

env:
  NAME_VERSION_FILE: ${{ github.workspace }}/version/version
  RELEASE_BRANCH: release
  MINOR: minor
  PATCH: patch
  VERSION_UP: ${{ github.workspace }}/.github/workflows/scripts/version_update.py

jobs:
  update-version:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.output-tag.outputs.TAG_MSG }}
    steps:
      - name: Checkout code (release branch)
        uses: actions/checkout@v3
        with:
          ref: ${{ env.RELEASE_BRANCH }}
          fetch-depth: 0

      - name: Parse branch name
        id: parse-data
        uses: tj-actions/branch-names@v8

      - name: Debug - Check files
        run: |
          echo "Workspace: ${{ github.workspace }}"
          ls -la ${{ github.workspace }}/.github/workflows/scripts/
          ls -la ${{ github.workspace }}/version/

      - name: Validate branch (feature/hotfix)
        if: |
          contains(steps.parse-data.outputs.current_branch, 'feature') || 
          contains(steps.parse-data.outputs.current_branch, 'hotfix')
        run: echo "Valid branch"

      - name: Run version update script
        run: |
          if [ ! -f "${{ env.VERSION_UP }}" ]; then
            echo "Error: File ${{ env.VERSION_UP }} not found!"
            exit 1
          fi
          
          if [ "${{ contains(steps.parse-data.outputs.current_branch, 'feature') }}" = "true" ]; then
            echo "Running minor update"
            python ${{ env.VERSION_UP }} ${{ env.MINOR }} ${{ env.NAME_VERSION_FILE }}
          elif [ "${{ contains(steps.parse-data.outputs.current_branch, 'hotfix') }}" = "true" ]; then
            echo "Running patch update"
            python ${{ env.VERSION_UP }} ${{ env.PATCH }} ${{ env.NAME_VERSION_FILE }}
          else
            echo "Unknown branch type"
            exit 1
          fi

      - name: Set output tag
        id: output-tag
        run: |
          TAG_MSG=$(python ${{ env.VERSION_UP }} ${{ env.NAME_VERSION_FILE }} version)
          echo "TAG_MSG=$TAG_MSG" >> $GITHUB_OUTPUT

      - name: Setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Commit and push changes
        run: |
          git add .
          git commit -m "Update version"
          git push origin ${{ env.RELEASE_BRANCH }}